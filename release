#!/bin/sh

VALID=""
HELP=""
VERSION=`date +%Y.%m.%d.%H`
VERSION_BUMP=""

case "$1" in
	-a|--alpha)
		VERSION="${VERSION}a"
		VERSION_BUMP="1"
		VALID="1"
		;;
	-b|--beta)
		VERSION="${VERSION}b"
		VALID="1"
		;;
	-p|--pre)
		VERSION="${VERSION}pre"
		VERSION_BUMP="1"
		VALID="1"
		;;
	-r|--release)
		VALID="1"
		;;
	-h|--help)
		HELP="1"
		VALID="1"
		;;
esac

EXIT=0
if [ -z "${VALID}" ]; then
	echo "Invalid action: '${1}'"
	EXIT=1
fi
if [ -z "${VALID}" ] || [ -n "${HELP}" ]; then
	echo "Options:"
	echo " -a --alpha   Alpha version bump"
	echo " -b --beta    Beta release"
	echo " -p --pre     Pre version bump"
	echo " -r --release Final release"
	echo " -h --help    Print this help message"
	echo ""
	echo "Version bumps will just modify the install.manifest and commit the changes. Releases will also modify the ChangeLog and tag the commit."
	exit $EXIT
fi

# Check for uncommitted changes
CHANGES=`git diff HEAD --exit-code --name-only`
if [ $? -ne 0 ]; then
	echo "There are uncommitted changes:"
	echo "${CHANGES}"
	exit 1
fi

# Up the version
sed -i "/^version=/s/=.*$/=${VERSION}/g" install.manifest
git add install.manifest

if [ -z "${VERSION_BUMP}" ]; then
	# Update the ChangeLog
	sed -i "/^Version /s/ next$/ next\n\nVersion ${VERSION}/g" ChangeLog
	git add ChangeLog

	# Commit and tag the release
	git commit -m "Release ${VERSION}"
	git tag "${VERSION}"
else
	# Commit
	git commit -m "Version bump ${VERSION}"
fi

