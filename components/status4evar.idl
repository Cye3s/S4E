/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Status-4-Evar.
 *
 * The Initial Developer of the Original Code is 
 * Matthew Turnbull <sparky@bluefang-logic.com>.
 *
 * Portions created by the Initial Developer are Copyright (C) 2012
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 * 
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMWindow;

[scriptable, uuid(13b3595e-7bb5-4cfe-bbfa-82c900a4d7bf)]
interface nsIStatus4Evar : nsISupports
{
	readonly attribute boolean   addonbarBorderStyle;
	readonly attribute boolean   addonbarCloseButton;
	readonly attribute boolean   addonbarWindowGripper;

	readonly attribute boolean   advancedStatusDetectFullScreen;
	readonly attribute boolean   advancedUrlbarForceBinding;

	readonly attribute ACString  downloadColorActive;
	readonly attribute ACString  downloadColorPaused;
	readonly attribute boolean   downloadForce;
	readonly attribute long      downloadLabel;
	readonly attribute boolean   downloadLabelForce;
	readonly attribute long      downloadProgress;
	readonly attribute long      downloadTooltip;

	readonly attribute boolean   firstRun;

	readonly attribute ACString  progressToolbarCSS;
	readonly attribute boolean   progressToolbarForce;
	readonly attribute boolean   progressToolbarStyle;
	readonly attribute boolean   progressToolbarStyleAdvanced;

	readonly attribute ACString  progressUrlbar;
	readonly attribute ACString  progressUrlbarCSS;
	readonly attribute boolean   progressUrlbarStyle;
	readonly attribute boolean   progressUrlbarStyleAdvanced;

	readonly attribute long      status;
	readonly attribute boolean   statusDefault;
	readonly attribute boolean   statusNetwork;
	readonly attribute boolean   statusNetworkXHR;
	readonly attribute long      statusTimeout;
	readonly attribute long      statusLinkOver;
	readonly attribute long      statusLinkOverDelayShow;
	readonly attribute long      statusLinkOverDelayHide;

	readonly attribute long      statusToolbarMaxLength;

	readonly attribute ACString  statusUrlbarAlign;
	readonly attribute ACString  statusUrlbarColor;
	readonly attribute long      statusUrlbarPosition;

	readonly attribute boolean   statusUrlbarInvertMirror;
	readonly attribute boolean   statusUrlbarMouseMirror;

	void resetPrefs();
	void updateWindow(in nsIDOMWindow win);
	void launchOptions(in nsIDOMWindow currentWindow);
};

